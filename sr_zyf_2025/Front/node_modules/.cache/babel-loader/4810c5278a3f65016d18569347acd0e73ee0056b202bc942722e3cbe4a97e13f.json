{"ast":null,"code":"/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n  return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n  extendStatics(d, b);\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nfunction __values(o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n    i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n}\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n}\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\nvar Event = /** @class */function () {\n  function Event(type, target) {\n    this.target = target;\n    this.type = type;\n  }\n  return Event;\n}();\nvar ErrorEvent = /** @class */function (_super) {\n  __extends(ErrorEvent, _super);\n  function ErrorEvent(error, target) {\n    var _this = _super.call(this, 'error', target) || this;\n    _this.message = error.message;\n    _this.error = error;\n    return _this;\n  }\n  return ErrorEvent;\n}(Event);\nvar CloseEvent = /** @class */function (_super) {\n  __extends(CloseEvent, _super);\n  function CloseEvent(code, reason, target) {\n    if (code === void 0) {\n      code = 1000;\n    }\n    if (reason === void 0) {\n      reason = '';\n    }\n    var _this = _super.call(this, 'close', target) || this;\n    _this.wasClean = true;\n    _this.code = code;\n    _this.reason = reason;\n    return _this;\n  }\n  return CloseEvent;\n}(Event);\n\n/*!\r\n * Reconnecting WebSocket\r\n * by Pedro Ladaria <pedro.ladaria@gmail.com>\r\n * https://github.com/pladaria/reconnecting-websocket\r\n * License MIT\r\n */\nvar getGlobalWebSocket = function () {\n  if (typeof WebSocket !== 'undefined') {\n    // @ts-ignore\n    return WebSocket;\n  }\n};\n/**\r\n * Returns true if given argument looks like a WebSocket class\r\n */\nvar isWebSocket = function (w) {\n  return typeof w !== 'undefined' && !!w && w.CLOSING === 2;\n};\nvar DEFAULT = {\n  maxReconnectionDelay: 10000,\n  minReconnectionDelay: 1000 + Math.random() * 4000,\n  minUptime: 5000,\n  reconnectionDelayGrowFactor: 1.3,\n  connectionTimeout: 4000,\n  maxRetries: Infinity,\n  maxEnqueuedMessages: Infinity,\n  startClosed: false,\n  debug: false\n};\nvar ReconnectingWebSocket = /** @class */function () {\n  function ReconnectingWebSocket(url, protocols, options) {\n    var _this = this;\n    if (options === void 0) {\n      options = {};\n    }\n    this._listeners = {\n      error: [],\n      message: [],\n      open: [],\n      close: []\n    };\n    this._retryCount = -1;\n    this._shouldReconnect = true;\n    this._connectLock = false;\n    this._binaryType = 'blob';\n    this._closeCalled = false;\n    this._messageQueue = [];\n    /**\r\n     * An event listener to be called when the WebSocket connection's readyState changes to CLOSED\r\n     */\n    this.onclose = null;\n    /**\r\n     * An event listener to be called when an error occurs\r\n     */\n    this.onerror = null;\n    /**\r\n     * An event listener to be called when a message is received from the server\r\n     */\n    this.onmessage = null;\n    /**\r\n     * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\r\n     * this indicates that the connection is ready to send and receive data\r\n     */\n    this.onopen = null;\n    this._handleOpen = function (event) {\n      _this._debug('open event');\n      var _a = _this._options.minUptime,\n        minUptime = _a === void 0 ? DEFAULT.minUptime : _a;\n      clearTimeout(_this._connectTimeout);\n      _this._uptimeTimeout = setTimeout(function () {\n        return _this._acceptOpen();\n      }, minUptime);\n      _this._ws.binaryType = _this._binaryType;\n      // send enqueued messages (messages sent before websocket open event)\n      _this._messageQueue.forEach(function (message) {\n        return _this._ws.send(message);\n      });\n      _this._messageQueue = [];\n      if (_this.onopen) {\n        _this.onopen(event);\n      }\n      _this._listeners.open.forEach(function (listener) {\n        return _this._callEventListener(event, listener);\n      });\n    };\n    this._handleMessage = function (event) {\n      _this._debug('message event');\n      if (_this.onmessage) {\n        _this.onmessage(event);\n      }\n      _this._listeners.message.forEach(function (listener) {\n        return _this._callEventListener(event, listener);\n      });\n    };\n    this._handleError = function (event) {\n      _this._debug('error event', event.message);\n      _this._disconnect(undefined, event.message === 'TIMEOUT' ? 'timeout' : undefined);\n      if (_this.onerror) {\n        _this.onerror(event);\n      }\n      _this._debug('exec error listeners');\n      _this._listeners.error.forEach(function (listener) {\n        return _this._callEventListener(event, listener);\n      });\n      _this._connect();\n    };\n    this._handleClose = function (event) {\n      _this._debug('close event');\n      _this._clearTimeouts();\n      if (_this._shouldReconnect) {\n        _this._connect();\n      }\n      if (_this.onclose) {\n        _this.onclose(event);\n      }\n      _this._listeners.close.forEach(function (listener) {\n        return _this._callEventListener(event, listener);\n      });\n    };\n    this._url = url;\n    this._protocols = protocols;\n    this._options = options;\n    if (this._options.startClosed) {\n      this._shouldReconnect = false;\n    }\n    this._connect();\n  }\n  Object.defineProperty(ReconnectingWebSocket, \"CONNECTING\", {\n    get: function () {\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket, \"OPEN\", {\n    get: function () {\n      return 1;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket, \"CLOSING\", {\n    get: function () {\n      return 2;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket, \"CLOSED\", {\n    get: function () {\n      return 3;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"CONNECTING\", {\n    get: function () {\n      return ReconnectingWebSocket.CONNECTING;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"OPEN\", {\n    get: function () {\n      return ReconnectingWebSocket.OPEN;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSING\", {\n    get: function () {\n      return ReconnectingWebSocket.CLOSING;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSED\", {\n    get: function () {\n      return ReconnectingWebSocket.CLOSED;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"binaryType\", {\n    get: function () {\n      return this._ws ? this._ws.binaryType : this._binaryType;\n    },\n    set: function (value) {\n      this._binaryType = value;\n      if (this._ws) {\n        this._ws.binaryType = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"retryCount\", {\n    /**\r\n     * Returns the number or connection retries\r\n     */\n    get: function () {\n      return Math.max(this._retryCount, 0);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"bufferedAmount\", {\n    /**\r\n     * The number of bytes of data that have been queued using calls to send() but not yet\r\n     * transmitted to the network. This value resets to zero once all queued data has been sent.\r\n     * This value does not reset to zero when the connection is closed; if you keep calling send(),\r\n     * this will continue to climb. Read only\r\n     */\n    get: function () {\n      var bytes = this._messageQueue.reduce(function (acc, message) {\n        if (typeof message === 'string') {\n          acc += message.length; // not byte size\n        } else if (message instanceof Blob) {\n          acc += message.size;\n        } else {\n          acc += message.byteLength;\n        }\n        return acc;\n      }, 0);\n      return bytes + (this._ws ? this._ws.bufferedAmount : 0);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"extensions\", {\n    /**\r\n     * The extensions selected by the server. This is currently only the empty string or a list of\r\n     * extensions as negotiated by the connection\r\n     */\n    get: function () {\n      return this._ws ? this._ws.extensions : '';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"protocol\", {\n    /**\r\n     * A string indicating the name of the sub-protocol the server selected;\r\n     * this will be one of the strings specified in the protocols parameter when creating the\r\n     * WebSocket object\r\n     */\n    get: function () {\n      return this._ws ? this._ws.protocol : '';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"readyState\", {\n    /**\r\n     * The current state of the connection; this is one of the Ready state constants\r\n     */\n    get: function () {\n      if (this._ws) {\n        return this._ws.readyState;\n      }\n      return this._options.startClosed ? ReconnectingWebSocket.CLOSED : ReconnectingWebSocket.CONNECTING;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"url\", {\n    /**\r\n     * The URL as resolved by the constructor\r\n     */\n    get: function () {\n      return this._ws ? this._ws.url : '';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Closes the WebSocket connection or connection attempt, if any. If the connection is already\r\n   * CLOSED, this method does nothing\r\n   */\n  ReconnectingWebSocket.prototype.close = function (code, reason) {\n    if (code === void 0) {\n      code = 1000;\n    }\n    this._closeCalled = true;\n    this._shouldReconnect = false;\n    this._clearTimeouts();\n    if (!this._ws) {\n      this._debug('close enqueued: no ws instance');\n      return;\n    }\n    if (this._ws.readyState === this.CLOSED) {\n      this._debug('close: already closed');\n      return;\n    }\n    this._ws.close(code, reason);\n  };\n  /**\r\n   * Closes the WebSocket connection or connection attempt and connects again.\r\n   * Resets retry counter;\r\n   */\n  ReconnectingWebSocket.prototype.reconnect = function (code, reason) {\n    this._shouldReconnect = true;\n    this._closeCalled = false;\n    this._retryCount = -1;\n    if (!this._ws || this._ws.readyState === this.CLOSED) {\n      this._connect();\n    } else {\n      this._disconnect(code, reason);\n      this._connect();\n    }\n  };\n  /**\r\n   * Enqueue specified data to be transmitted to the server over the WebSocket connection\r\n   */\n  ReconnectingWebSocket.prototype.send = function (data) {\n    if (this._ws && this._ws.readyState === this.OPEN) {\n      this._debug('send', data);\n      this._ws.send(data);\n    } else {\n      var _a = this._options.maxEnqueuedMessages,\n        maxEnqueuedMessages = _a === void 0 ? DEFAULT.maxEnqueuedMessages : _a;\n      if (this._messageQueue.length < maxEnqueuedMessages) {\n        this._debug('enqueue', data);\n        this._messageQueue.push(data);\n      }\n    }\n  };\n  /**\r\n   * Register an event handler of a specific event type\r\n   */\n  ReconnectingWebSocket.prototype.addEventListener = function (type, listener) {\n    if (this._listeners[type]) {\n      // @ts-ignore\n      this._listeners[type].push(listener);\n    }\n  };\n  ReconnectingWebSocket.prototype.dispatchEvent = function (event) {\n    var e_1, _a;\n    var listeners = this._listeners[event.type];\n    if (listeners) {\n      try {\n        for (var listeners_1 = __values(listeners), listeners_1_1 = listeners_1.next(); !listeners_1_1.done; listeners_1_1 = listeners_1.next()) {\n          var listener = listeners_1_1.value;\n          this._callEventListener(event, listener);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (listeners_1_1 && !listeners_1_1.done && (_a = listeners_1.return)) _a.call(listeners_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n    return true;\n  };\n  /**\r\n   * Removes an event listener\r\n   */\n  ReconnectingWebSocket.prototype.removeEventListener = function (type, listener) {\n    if (this._listeners[type]) {\n      // @ts-ignore\n      this._listeners[type] = this._listeners[type].filter(function (l) {\n        return l !== listener;\n      });\n    }\n  };\n  ReconnectingWebSocket.prototype._debug = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (this._options.debug) {\n      // not using spread because compiled version uses Symbols\n      // tslint:disable-next-line\n      console.log.apply(console, __spread(['RWS>'], args));\n    }\n  };\n  ReconnectingWebSocket.prototype._getNextDelay = function () {\n    var _a = this._options,\n      _b = _a.reconnectionDelayGrowFactor,\n      reconnectionDelayGrowFactor = _b === void 0 ? DEFAULT.reconnectionDelayGrowFactor : _b,\n      _c = _a.minReconnectionDelay,\n      minReconnectionDelay = _c === void 0 ? DEFAULT.minReconnectionDelay : _c,\n      _d = _a.maxReconnectionDelay,\n      maxReconnectionDelay = _d === void 0 ? DEFAULT.maxReconnectionDelay : _d;\n    var delay = 0;\n    if (this._retryCount > 0) {\n      delay = minReconnectionDelay * Math.pow(reconnectionDelayGrowFactor, this._retryCount - 1);\n      if (delay > maxReconnectionDelay) {\n        delay = maxReconnectionDelay;\n      }\n    }\n    this._debug('next delay', delay);\n    return delay;\n  };\n  ReconnectingWebSocket.prototype._wait = function () {\n    var _this = this;\n    return new Promise(function (resolve) {\n      setTimeout(resolve, _this._getNextDelay());\n    });\n  };\n  ReconnectingWebSocket.prototype._getNextUrl = function (urlProvider) {\n    if (typeof urlProvider === 'string') {\n      return Promise.resolve(urlProvider);\n    }\n    if (typeof urlProvider === 'function') {\n      var url = urlProvider();\n      if (typeof url === 'string') {\n        return Promise.resolve(url);\n      }\n      if (!!url.then) {\n        return url;\n      }\n    }\n    throw Error('Invalid URL');\n  };\n  ReconnectingWebSocket.prototype._connect = function () {\n    var _this = this;\n    if (this._connectLock || !this._shouldReconnect) {\n      return;\n    }\n    this._connectLock = true;\n    var _a = this._options,\n      _b = _a.maxRetries,\n      maxRetries = _b === void 0 ? DEFAULT.maxRetries : _b,\n      _c = _a.connectionTimeout,\n      connectionTimeout = _c === void 0 ? DEFAULT.connectionTimeout : _c,\n      _d = _a.WebSocket,\n      WebSocket = _d === void 0 ? getGlobalWebSocket() : _d;\n    if (this._retryCount >= maxRetries) {\n      this._debug('max retries reached', this._retryCount, '>=', maxRetries);\n      return;\n    }\n    this._retryCount++;\n    this._debug('connect', this._retryCount);\n    this._removeListeners();\n    if (!isWebSocket(WebSocket)) {\n      throw Error('No valid WebSocket class provided');\n    }\n    this._wait().then(function () {\n      return _this._getNextUrl(_this._url);\n    }).then(function (url) {\n      // close could be called before creating the ws\n      if (_this._closeCalled) {\n        return;\n      }\n      _this._debug('connect', {\n        url: url,\n        protocols: _this._protocols\n      });\n      _this._ws = _this._protocols ? new WebSocket(url, _this._protocols) : new WebSocket(url);\n      _this._ws.binaryType = _this._binaryType;\n      _this._connectLock = false;\n      _this._addListeners();\n      _this._connectTimeout = setTimeout(function () {\n        return _this._handleTimeout();\n      }, connectionTimeout);\n    });\n  };\n  ReconnectingWebSocket.prototype._handleTimeout = function () {\n    this._debug('timeout event');\n    this._handleError(new ErrorEvent(Error('TIMEOUT'), this));\n  };\n  ReconnectingWebSocket.prototype._disconnect = function (code, reason) {\n    if (code === void 0) {\n      code = 1000;\n    }\n    this._clearTimeouts();\n    if (!this._ws) {\n      return;\n    }\n    this._removeListeners();\n    try {\n      this._ws.close(code, reason);\n      this._handleClose(new CloseEvent(code, reason, this));\n    } catch (error) {\n      // ignore\n    }\n  };\n  ReconnectingWebSocket.prototype._acceptOpen = function () {\n    this._debug('accept open');\n    this._retryCount = 0;\n  };\n  ReconnectingWebSocket.prototype._callEventListener = function (event, listener) {\n    if ('handleEvent' in listener) {\n      // @ts-ignore\n      listener.handleEvent(event);\n    } else {\n      // @ts-ignore\n      listener(event);\n    }\n  };\n  ReconnectingWebSocket.prototype._removeListeners = function () {\n    if (!this._ws) {\n      return;\n    }\n    this._debug('removeListeners');\n    this._ws.removeEventListener('open', this._handleOpen);\n    this._ws.removeEventListener('close', this._handleClose);\n    this._ws.removeEventListener('message', this._handleMessage);\n    // @ts-ignore\n    this._ws.removeEventListener('error', this._handleError);\n  };\n  ReconnectingWebSocket.prototype._addListeners = function () {\n    if (!this._ws) {\n      return;\n    }\n    this._debug('addListeners');\n    this._ws.addEventListener('open', this._handleOpen);\n    this._ws.addEventListener('close', this._handleClose);\n    this._ws.addEventListener('message', this._handleMessage);\n    // @ts-ignore\n    this._ws.addEventListener('error', this._handleError);\n  };\n  ReconnectingWebSocket.prototype._clearTimeouts = function () {\n    clearTimeout(this._connectTimeout);\n    clearTimeout(this._uptimeTimeout);\n  };\n  return ReconnectingWebSocket;\n}();\nexport default ReconnectingWebSocket;","map":{"version":3,"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","ar","e","push","error","__spread","arguments","concat","Event","type","target","ErrorEvent","_super","_this","message","CloseEvent","code","reason","wasClean","getGlobalWebSocket","WebSocket","isWebSocket","w","CLOSING","DEFAULT","maxReconnectionDelay","minReconnectionDelay","Math","random","minUptime","reconnectionDelayGrowFactor","connectionTimeout","maxRetries","Infinity","maxEnqueuedMessages","startClosed","debug","ReconnectingWebSocket","url","protocols","options","_listeners","open","close","_retryCount","_shouldReconnect","_connectLock","_binaryType","_closeCalled","_messageQueue","onclose","onerror","onmessage","onopen","_handleOpen","event","_debug","_a","_options","clearTimeout","_connectTimeout","_uptimeTimeout","setTimeout","_acceptOpen","_ws","binaryType","forEach","send","listener","_callEventListener","_handleMessage","_handleError","_disconnect","undefined","_connect","_handleClose","_clearTimeouts","_url","_protocols","defineProperty","get","enumerable","configurable","CONNECTING","OPEN","CLOSED","set","max","bytes","reduce","acc","Blob","size","byteLength","bufferedAmount","extensions","protocol","readyState","reconnect","data","addEventListener","dispatchEvent","e_1","listeners","listeners_1","listeners_1_1","e_1_1","return","removeEventListener","filter","l","args","_i","console","log","apply","_getNextDelay","_b","_c","_d","delay","pow","_wait","Promise","resolve","_getNextUrl","urlProvider","then","Error","_removeListeners","_addListeners","_handleTimeout","handleEvent"],"sources":["/Users/jiezhou/IdeaProjects/graduaction/sr_RemoteDoctor_2025/Front/node_modules/reconnecting-websocket/dist/reconnecting-websocket-mjs.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\nvar Event = /** @class */ (function () {\r\n    function Event(type, target) {\r\n        this.target = target;\r\n        this.type = type;\r\n    }\r\n    return Event;\r\n}());\r\nvar ErrorEvent = /** @class */ (function (_super) {\r\n    __extends(ErrorEvent, _super);\r\n    function ErrorEvent(error, target) {\r\n        var _this = _super.call(this, 'error', target) || this;\r\n        _this.message = error.message;\r\n        _this.error = error;\r\n        return _this;\r\n    }\r\n    return ErrorEvent;\r\n}(Event));\r\nvar CloseEvent = /** @class */ (function (_super) {\r\n    __extends(CloseEvent, _super);\r\n    function CloseEvent(code, reason, target) {\r\n        if (code === void 0) { code = 1000; }\r\n        if (reason === void 0) { reason = ''; }\r\n        var _this = _super.call(this, 'close', target) || this;\r\n        _this.wasClean = true;\r\n        _this.code = code;\r\n        _this.reason = reason;\r\n        return _this;\r\n    }\r\n    return CloseEvent;\r\n}(Event));\n\n/*!\r\n * Reconnecting WebSocket\r\n * by Pedro Ladaria <pedro.ladaria@gmail.com>\r\n * https://github.com/pladaria/reconnecting-websocket\r\n * License MIT\r\n */\r\nvar getGlobalWebSocket = function () {\r\n    if (typeof WebSocket !== 'undefined') {\r\n        // @ts-ignore\r\n        return WebSocket;\r\n    }\r\n};\r\n/**\r\n * Returns true if given argument looks like a WebSocket class\r\n */\r\nvar isWebSocket = function (w) { return typeof w !== 'undefined' && !!w && w.CLOSING === 2; };\r\nvar DEFAULT = {\r\n    maxReconnectionDelay: 10000,\r\n    minReconnectionDelay: 1000 + Math.random() * 4000,\r\n    minUptime: 5000,\r\n    reconnectionDelayGrowFactor: 1.3,\r\n    connectionTimeout: 4000,\r\n    maxRetries: Infinity,\r\n    maxEnqueuedMessages: Infinity,\r\n    startClosed: false,\r\n    debug: false,\r\n};\r\nvar ReconnectingWebSocket = /** @class */ (function () {\r\n    function ReconnectingWebSocket(url, protocols, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        this._listeners = {\r\n            error: [],\r\n            message: [],\r\n            open: [],\r\n            close: [],\r\n        };\r\n        this._retryCount = -1;\r\n        this._shouldReconnect = true;\r\n        this._connectLock = false;\r\n        this._binaryType = 'blob';\r\n        this._closeCalled = false;\r\n        this._messageQueue = [];\r\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to CLOSED\r\n         */\r\n        this.onclose = null;\r\n        /**\r\n         * An event listener to be called when an error occurs\r\n         */\r\n        this.onerror = null;\r\n        /**\r\n         * An event listener to be called when a message is received from the server\r\n         */\r\n        this.onmessage = null;\r\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\r\n         * this indicates that the connection is ready to send and receive data\r\n         */\r\n        this.onopen = null;\r\n        this._handleOpen = function (event) {\r\n            _this._debug('open event');\r\n            var _a = _this._options.minUptime, minUptime = _a === void 0 ? DEFAULT.minUptime : _a;\r\n            clearTimeout(_this._connectTimeout);\r\n            _this._uptimeTimeout = setTimeout(function () { return _this._acceptOpen(); }, minUptime);\r\n            _this._ws.binaryType = _this._binaryType;\r\n            // send enqueued messages (messages sent before websocket open event)\r\n            _this._messageQueue.forEach(function (message) { return _this._ws.send(message); });\r\n            _this._messageQueue = [];\r\n            if (_this.onopen) {\r\n                _this.onopen(event);\r\n            }\r\n            _this._listeners.open.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._handleMessage = function (event) {\r\n            _this._debug('message event');\r\n            if (_this.onmessage) {\r\n                _this.onmessage(event);\r\n            }\r\n            _this._listeners.message.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._handleError = function (event) {\r\n            _this._debug('error event', event.message);\r\n            _this._disconnect(undefined, event.message === 'TIMEOUT' ? 'timeout' : undefined);\r\n            if (_this.onerror) {\r\n                _this.onerror(event);\r\n            }\r\n            _this._debug('exec error listeners');\r\n            _this._listeners.error.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n            _this._connect();\r\n        };\r\n        this._handleClose = function (event) {\r\n            _this._debug('close event');\r\n            _this._clearTimeouts();\r\n            if (_this._shouldReconnect) {\r\n                _this._connect();\r\n            }\r\n            if (_this.onclose) {\r\n                _this.onclose(event);\r\n            }\r\n            _this._listeners.close.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._url = url;\r\n        this._protocols = protocols;\r\n        this._options = options;\r\n        if (this._options.startClosed) {\r\n            this._shouldReconnect = false;\r\n        }\r\n        this._connect();\r\n    }\r\n    Object.defineProperty(ReconnectingWebSocket, \"CONNECTING\", {\r\n        get: function () {\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"OPEN\", {\r\n        get: function () {\r\n            return 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSING\", {\r\n        get: function () {\r\n            return 2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSED\", {\r\n        get: function () {\r\n            return 3;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CONNECTING\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CONNECTING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"OPEN\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.OPEN;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSING\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CLOSING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSED\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CLOSED;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"binaryType\", {\r\n        get: function () {\r\n            return this._ws ? this._ws.binaryType : this._binaryType;\r\n        },\r\n        set: function (value) {\r\n            this._binaryType = value;\r\n            if (this._ws) {\r\n                this._ws.binaryType = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"retryCount\", {\r\n        /**\r\n         * Returns the number or connection retries\r\n         */\r\n        get: function () {\r\n            return Math.max(this._retryCount, 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"bufferedAmount\", {\r\n        /**\r\n         * The number of bytes of data that have been queued using calls to send() but not yet\r\n         * transmitted to the network. This value resets to zero once all queued data has been sent.\r\n         * This value does not reset to zero when the connection is closed; if you keep calling send(),\r\n         * this will continue to climb. Read only\r\n         */\r\n        get: function () {\r\n            var bytes = this._messageQueue.reduce(function (acc, message) {\r\n                if (typeof message === 'string') {\r\n                    acc += message.length; // not byte size\r\n                }\r\n                else if (message instanceof Blob) {\r\n                    acc += message.size;\r\n                }\r\n                else {\r\n                    acc += message.byteLength;\r\n                }\r\n                return acc;\r\n            }, 0);\r\n            return bytes + (this._ws ? this._ws.bufferedAmount : 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"extensions\", {\r\n        /**\r\n         * The extensions selected by the server. This is currently only the empty string or a list of\r\n         * extensions as negotiated by the connection\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.extensions : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"protocol\", {\r\n        /**\r\n         * A string indicating the name of the sub-protocol the server selected;\r\n         * this will be one of the strings specified in the protocols parameter when creating the\r\n         * WebSocket object\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.protocol : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"readyState\", {\r\n        /**\r\n         * The current state of the connection; this is one of the Ready state constants\r\n         */\r\n        get: function () {\r\n            if (this._ws) {\r\n                return this._ws.readyState;\r\n            }\r\n            return this._options.startClosed\r\n                ? ReconnectingWebSocket.CLOSED\r\n                : ReconnectingWebSocket.CONNECTING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"url\", {\r\n        /**\r\n         * The URL as resolved by the constructor\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.url : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Closes the WebSocket connection or connection attempt, if any. If the connection is already\r\n     * CLOSED, this method does nothing\r\n     */\r\n    ReconnectingWebSocket.prototype.close = function (code, reason) {\r\n        if (code === void 0) { code = 1000; }\r\n        this._closeCalled = true;\r\n        this._shouldReconnect = false;\r\n        this._clearTimeouts();\r\n        if (!this._ws) {\r\n            this._debug('close enqueued: no ws instance');\r\n            return;\r\n        }\r\n        if (this._ws.readyState === this.CLOSED) {\r\n            this._debug('close: already closed');\r\n            return;\r\n        }\r\n        this._ws.close(code, reason);\r\n    };\r\n    /**\r\n     * Closes the WebSocket connection or connection attempt and connects again.\r\n     * Resets retry counter;\r\n     */\r\n    ReconnectingWebSocket.prototype.reconnect = function (code, reason) {\r\n        this._shouldReconnect = true;\r\n        this._closeCalled = false;\r\n        this._retryCount = -1;\r\n        if (!this._ws || this._ws.readyState === this.CLOSED) {\r\n            this._connect();\r\n        }\r\n        else {\r\n            this._disconnect(code, reason);\r\n            this._connect();\r\n        }\r\n    };\r\n    /**\r\n     * Enqueue specified data to be transmitted to the server over the WebSocket connection\r\n     */\r\n    ReconnectingWebSocket.prototype.send = function (data) {\r\n        if (this._ws && this._ws.readyState === this.OPEN) {\r\n            this._debug('send', data);\r\n            this._ws.send(data);\r\n        }\r\n        else {\r\n            var _a = this._options.maxEnqueuedMessages, maxEnqueuedMessages = _a === void 0 ? DEFAULT.maxEnqueuedMessages : _a;\r\n            if (this._messageQueue.length < maxEnqueuedMessages) {\r\n                this._debug('enqueue', data);\r\n                this._messageQueue.push(data);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Register an event handler of a specific event type\r\n     */\r\n    ReconnectingWebSocket.prototype.addEventListener = function (type, listener) {\r\n        if (this._listeners[type]) {\r\n            // @ts-ignore\r\n            this._listeners[type].push(listener);\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype.dispatchEvent = function (event) {\r\n        var e_1, _a;\r\n        var listeners = this._listeners[event.type];\r\n        if (listeners) {\r\n            try {\r\n                for (var listeners_1 = __values(listeners), listeners_1_1 = listeners_1.next(); !listeners_1_1.done; listeners_1_1 = listeners_1.next()) {\r\n                    var listener = listeners_1_1.value;\r\n                    this._callEventListener(event, listener);\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (listeners_1_1 && !listeners_1_1.done && (_a = listeners_1.return)) _a.call(listeners_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Removes an event listener\r\n     */\r\n    ReconnectingWebSocket.prototype.removeEventListener = function (type, listener) {\r\n        if (this._listeners[type]) {\r\n            // @ts-ignore\r\n            this._listeners[type] = this._listeners[type].filter(function (l) { return l !== listener; });\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (this._options.debug) {\r\n            // not using spread because compiled version uses Symbols\r\n            // tslint:disable-next-line\r\n            console.log.apply(console, __spread(['RWS>'], args));\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._getNextDelay = function () {\r\n        var _a = this._options, _b = _a.reconnectionDelayGrowFactor, reconnectionDelayGrowFactor = _b === void 0 ? DEFAULT.reconnectionDelayGrowFactor : _b, _c = _a.minReconnectionDelay, minReconnectionDelay = _c === void 0 ? DEFAULT.minReconnectionDelay : _c, _d = _a.maxReconnectionDelay, maxReconnectionDelay = _d === void 0 ? DEFAULT.maxReconnectionDelay : _d;\r\n        var delay = 0;\r\n        if (this._retryCount > 0) {\r\n            delay =\r\n                minReconnectionDelay * Math.pow(reconnectionDelayGrowFactor, this._retryCount - 1);\r\n            if (delay > maxReconnectionDelay) {\r\n                delay = maxReconnectionDelay;\r\n            }\r\n        }\r\n        this._debug('next delay', delay);\r\n        return delay;\r\n    };\r\n    ReconnectingWebSocket.prototype._wait = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            setTimeout(resolve, _this._getNextDelay());\r\n        });\r\n    };\r\n    ReconnectingWebSocket.prototype._getNextUrl = function (urlProvider) {\r\n        if (typeof urlProvider === 'string') {\r\n            return Promise.resolve(urlProvider);\r\n        }\r\n        if (typeof urlProvider === 'function') {\r\n            var url = urlProvider();\r\n            if (typeof url === 'string') {\r\n                return Promise.resolve(url);\r\n            }\r\n            if (!!url.then) {\r\n                return url;\r\n            }\r\n        }\r\n        throw Error('Invalid URL');\r\n    };\r\n    ReconnectingWebSocket.prototype._connect = function () {\r\n        var _this = this;\r\n        if (this._connectLock || !this._shouldReconnect) {\r\n            return;\r\n        }\r\n        this._connectLock = true;\r\n        var _a = this._options, _b = _a.maxRetries, maxRetries = _b === void 0 ? DEFAULT.maxRetries : _b, _c = _a.connectionTimeout, connectionTimeout = _c === void 0 ? DEFAULT.connectionTimeout : _c, _d = _a.WebSocket, WebSocket = _d === void 0 ? getGlobalWebSocket() : _d;\r\n        if (this._retryCount >= maxRetries) {\r\n            this._debug('max retries reached', this._retryCount, '>=', maxRetries);\r\n            return;\r\n        }\r\n        this._retryCount++;\r\n        this._debug('connect', this._retryCount);\r\n        this._removeListeners();\r\n        if (!isWebSocket(WebSocket)) {\r\n            throw Error('No valid WebSocket class provided');\r\n        }\r\n        this._wait()\r\n            .then(function () { return _this._getNextUrl(_this._url); })\r\n            .then(function (url) {\r\n            // close could be called before creating the ws\r\n            if (_this._closeCalled) {\r\n                return;\r\n            }\r\n            _this._debug('connect', { url: url, protocols: _this._protocols });\r\n            _this._ws = _this._protocols\r\n                ? new WebSocket(url, _this._protocols)\r\n                : new WebSocket(url);\r\n            _this._ws.binaryType = _this._binaryType;\r\n            _this._connectLock = false;\r\n            _this._addListeners();\r\n            _this._connectTimeout = setTimeout(function () { return _this._handleTimeout(); }, connectionTimeout);\r\n        });\r\n    };\r\n    ReconnectingWebSocket.prototype._handleTimeout = function () {\r\n        this._debug('timeout event');\r\n        this._handleError(new ErrorEvent(Error('TIMEOUT'), this));\r\n    };\r\n    ReconnectingWebSocket.prototype._disconnect = function (code, reason) {\r\n        if (code === void 0) { code = 1000; }\r\n        this._clearTimeouts();\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._removeListeners();\r\n        try {\r\n            this._ws.close(code, reason);\r\n            this._handleClose(new CloseEvent(code, reason, this));\r\n        }\r\n        catch (error) {\r\n            // ignore\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._acceptOpen = function () {\r\n        this._debug('accept open');\r\n        this._retryCount = 0;\r\n    };\r\n    ReconnectingWebSocket.prototype._callEventListener = function (event, listener) {\r\n        if ('handleEvent' in listener) {\r\n            // @ts-ignore\r\n            listener.handleEvent(event);\r\n        }\r\n        else {\r\n            // @ts-ignore\r\n            listener(event);\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._removeListeners = function () {\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._debug('removeListeners');\r\n        this._ws.removeEventListener('open', this._handleOpen);\r\n        this._ws.removeEventListener('close', this._handleClose);\r\n        this._ws.removeEventListener('message', this._handleMessage);\r\n        // @ts-ignore\r\n        this._ws.removeEventListener('error', this._handleError);\r\n    };\r\n    ReconnectingWebSocket.prototype._addListeners = function () {\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._debug('addListeners');\r\n        this._ws.addEventListener('open', this._handleOpen);\r\n        this._ws.addEventListener('close', this._handleClose);\r\n        this._ws.addEventListener('message', this._handleMessage);\r\n        // @ts-ignore\r\n        this._ws.addEventListener('error', this._handleError);\r\n    };\r\n    ReconnectingWebSocket.prototype._clearTimeouts = function () {\r\n        clearTimeout(this._connectTimeout);\r\n        clearTimeout(this._uptimeTimeout);\r\n    };\r\n    return ReconnectingWebSocket;\r\n}());\n\nexport default ReconnectingWebSocket;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}