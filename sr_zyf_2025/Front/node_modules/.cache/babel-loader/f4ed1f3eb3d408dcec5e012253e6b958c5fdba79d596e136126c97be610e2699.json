{"ast":null,"code":"import poster from \"@/assets/poster.gif\";\nimport usePeerStore from \"@/store/peer\";\nimport { onMounted, ref } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { showToast } from \"vant\";\nexport default {\n  __name: 'VideoCallCallingView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let mainVideo = ref();\n    let secondaryVideo = ref();\n    let localUserMedia = ref();\n    let peerStore = usePeerStore();\n    let router = useRouter();\n    let route = useRoute();\n\n    //用于标记是否已经连接\n    let isConnected = ref(false);\n    onMounted(() => {\n      getLocalUserMedia({\n        audio: true,\n        video: true\n      }).then(userMedia => {\n        mainVideo.value.srcObject = userMedia;\n        mainVideo.value.muted = true;\n        localUserMedia.value = userMedia;\n        peerStore.dataConnection = peerStore.localPeer.connect(route.query.calleePeerId);\n        //对对方发过来的数据进行判断\n        peerStore.dataConnection.on(\"data\", data => {\n          if (data.instruction === peerStore.instruction.accept) {\n            //接受\n            peerStore.mediaConnection = peerStore.localPeer.call(route.query.calleePeerId, localUserMedia.value);\n            peerStore.mediaConnection.on(\"stream\", userMedia => {\n              mainVideo.value.srcObject = userMedia;\n              mainVideo.value.muted = false;\n              //视图互换一下，把对方放在主视图上\n              secondaryVideo.value.srcObject = localUserMedia.value;\n              secondaryVideo.value.muted = true;\n              isConnected.value = true;\n              showToast(\"connected\");\n            });\n          } else if (data.instruction === peerStore.instruction.busy) {\n            //忙线\n            //由于是对方通知关闭连接，所以此处调用close\n            peerStore.dataConnection.close();\n            peerStore.dataConnection = undefined;\n            for (let track of (_localUserMedia$value = localUserMedia.value) === null || _localUserMedia$value === void 0 ? void 0 : _localUserMedia$value.getTracks()) {\n              var _localUserMedia$value;\n              track.stop();\n            }\n            showToast(\"the other party is busy on the line\");\n            router.back();\n          } else if (data.instruction === peerStore.instruction.reject) {\n            //拒绝\n            //由于是对方通知关闭连接，所以此处调用close\n            peerStore.dataConnection.close();\n            peerStore.dataConnection = undefined;\n            for (let track of (_localUserMedia$value2 = localUserMedia.value) === null || _localUserMedia$value2 === void 0 ? void 0 : _localUserMedia$value2.getTracks()) {\n              var _localUserMedia$value2;\n              track.stop();\n            }\n            showToast(\"the other party refused\");\n            router.back();\n          } else if (data.instruction === peerStore.instruction.ringOff) {\n            //挂断\n            //由于是对方通知关闭连接，所以此处调用close\n            peerStore.dataConnection.close();\n            peerStore.dataConnection = undefined;\n            peerStore.mediaConnection.close();\n            peerStore.mediaConnection = undefined;\n            for (let track of (_localUserMedia$value3 = localUserMedia.value) === null || _localUserMedia$value3 === void 0 ? void 0 : _localUserMedia$value3.getTracks()) {\n              var _localUserMedia$value3;\n              track.stop();\n            }\n            showToast(\"the other party has hung up\");\n            router.back();\n          }\n        });\n        //当连接被打开的时候理解发送一个指令给对方\n        peerStore.dataConnection.on(\"open\", () => {\n          peerStore.dataConnection.send({\n            instruction: peerStore.instruction.request\n          });\n        });\n      }).catch(() => {\n        showToast(\"failed to obtain local video media\");\n        router.back();\n      });\n    });\n    function getLocalUserMedia(constrains) {\n      if (window.navigator.mediaDevices.getUserMedia) {\n        return window.navigator.mediaDevices.getUserMedia(constrains);\n      } else if (window.navigator.webkitGetUserMedia) {\n        return window.navigator.webkitGetUserMedia(constrains);\n      } else if (window.navigator.mozGetUserMedia) {\n        return window.navigator.mozGetUserMedia(constrains);\n      } else if (window.navigator.getUserMedia) {\n        return window.navigator.getUserMedia(constrains);\n      }\n      throw new Error(\"unable to get user media\");\n    }\n    function cancelVideoCall() {\n      var _peerStore$dataConnec;\n      for (let track of (_localUserMedia$value4 = localUserMedia.value) === null || _localUserMedia$value4 === void 0 ? void 0 : _localUserMedia$value4.getTracks()) {\n        var _localUserMedia$value4;\n        track.stop();\n      }\n      //有可能连接还没建立，所以这里用可选链操作符\n      (_peerStore$dataConnec = peerStore.dataConnection) === null || _peerStore$dataConnec === void 0 ? void 0 : _peerStore$dataConnec.send({\n        instruction: peerStore.instruction.cancel\n      });\n      peerStore.dataConnection = undefined;\n      router.back();\n    }\n    function ringOffVideoCall() {\n      for (let track of (_localUserMedia$value5 = localUserMedia.value) === null || _localUserMedia$value5 === void 0 ? void 0 : _localUserMedia$value5.getTracks()) {\n        var _localUserMedia$value5;\n        track.stop();\n      }\n      //挂断的时候这个连接肯定不为空，所以无需判断\n      peerStore.dataConnection.send({\n        instruction: peerStore.instruction.ringOff\n      });\n      peerStore.dataConnection = undefined;\n      peerStore.mediaConnection = undefined;\n      router.back();\n    }\n    const __returned__ = {\n      get mainVideo() {\n        return mainVideo;\n      },\n      set mainVideo(v) {\n        mainVideo = v;\n      },\n      get secondaryVideo() {\n        return secondaryVideo;\n      },\n      set secondaryVideo(v) {\n        secondaryVideo = v;\n      },\n      get localUserMedia() {\n        return localUserMedia;\n      },\n      set localUserMedia(v) {\n        localUserMedia = v;\n      },\n      get peerStore() {\n        return peerStore;\n      },\n      set peerStore(v) {\n        peerStore = v;\n      },\n      get router() {\n        return router;\n      },\n      set router(v) {\n        router = v;\n      },\n      get route() {\n        return route;\n      },\n      set route(v) {\n        route = v;\n      },\n      get isConnected() {\n        return isConnected;\n      },\n      set isConnected(v) {\n        isConnected = v;\n      },\n      getLocalUserMedia,\n      cancelVideoCall,\n      ringOffVideoCall,\n      get poster() {\n        return poster;\n      },\n      get usePeerStore() {\n        return usePeerStore;\n      },\n      onMounted,\n      ref,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get showToast() {\n        return showToast;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["poster","usePeerStore","onMounted","ref","useRoute","useRouter","showToast","mainVideo","secondaryVideo","localUserMedia","peerStore","router","route","isConnected","getLocalUserMedia","audio","video","then","userMedia","value","srcObject","muted","dataConnection","localPeer","connect","query","calleePeerId","on","data","instruction","accept","mediaConnection","call","busy","close","undefined","track","_localUserMedia$value","getTracks","stop","back","reject","_localUserMedia$value2","ringOff","_localUserMedia$value3","send","request","catch","constrains","window","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","mozGetUserMedia","Error","cancelVideoCall","_peerStore$dataConnec","_localUserMedia$value4","cancel","ringOffVideoCall","_localUserMedia$value5"],"sources":["/Users/jiezhou/IdeaProjects/graduaction/sr_RemoteDoctor_2025/Front/src/views/VideoCallCallingView.vue"],"sourcesContent":["<template>\n  <section class=\"container\">\n    <video class=\"main-video\" ref=\"mainVideo\" :poster=\"poster\" autoplay></video>\n    <video class=\"secondary-video\" ref=\"secondaryVideo\" :poster=\"poster\" autoplay></video>\n    <section class=\"bottom-bar\">\n      <van-button v-if=\"isConnected\" type=\"danger\" block @click=\"ringOffVideoCall\">\n        挂断视频通话\n      </van-button>\n      <van-button v-else type=\"danger\" block @click=\"cancelVideoCall\">\n        取消视频通话\n      </van-button>\n    </section>\n  </section>\n</template>\n\n<script setup>\nimport poster from \"@/assets/poster.gif\";\nimport usePeerStore from \"@/store/peer\";\nimport {onMounted, ref} from \"vue\";\nimport {useRoute, useRouter} from \"vue-router\";\nimport {showToast} from \"vant\";\n\nlet mainVideo = ref();\nlet secondaryVideo = ref();\nlet localUserMedia = ref();\nlet peerStore = usePeerStore();\nlet router = useRouter();\nlet route = useRoute();\n\n//用于标记是否已经连接\nlet isConnected = ref(false);\nonMounted(() => {\n  getLocalUserMedia({audio: true, video: true}).then(userMedia => {\n    mainVideo.value.srcObject = userMedia;\n    mainVideo.value.muted = true;\n    localUserMedia.value = userMedia;\n    peerStore.dataConnection = peerStore.localPeer.connect(route.query.calleePeerId);\n    //对对方发过来的数据进行判断\n    peerStore.dataConnection.on(\"data\", data => {\n      if (data.instruction === peerStore.instruction.accept) {//接受\n        peerStore.mediaConnection = peerStore.localPeer.call(route.query.calleePeerId, localUserMedia.value);\n        peerStore.mediaConnection.on(\"stream\", userMedia => {\n          mainVideo.value.srcObject = userMedia;\n          mainVideo.value.muted = false;\n          //视图互换一下，把对方放在主视图上\n          secondaryVideo.value.srcObject = localUserMedia.value;\n          secondaryVideo.value.muted = true;\n          isConnected.value = true;\n          showToast(\"connected\");\n        });\n      } else if (data.instruction === peerStore.instruction.busy) {//忙线\n        //由于是对方通知关闭连接，所以此处调用close\n        peerStore.dataConnection.close();\n        peerStore.dataConnection = undefined;\n        for (let track of localUserMedia.value?.getTracks()) {\n          track.stop();\n        }\n        showToast(\"the other party is busy on the line\");\n        router.back();\n      } else if (data.instruction === peerStore.instruction.reject) {//拒绝\n        //由于是对方通知关闭连接，所以此处调用close\n        peerStore.dataConnection.close();\n        peerStore.dataConnection = undefined;\n        for (let track of localUserMedia.value?.getTracks()) {\n          track.stop();\n        }\n        showToast(\"the other party refused\");\n        router.back();\n      } else if (data.instruction === peerStore.instruction.ringOff) {//挂断\n        //由于是对方通知关闭连接，所以此处调用close\n        peerStore.dataConnection.close();\n        peerStore.dataConnection = undefined;\n        peerStore.mediaConnection.close();\n        peerStore.mediaConnection = undefined;\n        for (let track of localUserMedia.value?.getTracks()) {\n          track.stop();\n        }\n        showToast(\"the other party has hung up\");\n        router.back();\n      }\n    });\n    //当连接被打开的时候理解发送一个指令给对方\n    peerStore.dataConnection.on(\"open\", () => {\n      peerStore.dataConnection.send({\n        instruction: peerStore.instruction.request\n      });\n    });\n  }).catch(() => {\n    showToast(\"failed to obtain local video media\");\n    router.back();\n  });\n});\n\n\nfunction getLocalUserMedia(constrains) {\n  if (window.navigator.mediaDevices.getUserMedia) {\n    return window.navigator.mediaDevices.getUserMedia(constrains);\n  } else if (window.navigator.webkitGetUserMedia) {\n    return window.navigator.webkitGetUserMedia(constrains);\n  } else if (window.navigator.mozGetUserMedia) {\n    return window.navigator.mozGetUserMedia(constrains);\n  } else if (window.navigator.getUserMedia) {\n    return window.navigator.getUserMedia(constrains);\n  }\n  throw new Error(\"unable to get user media\");\n}\n\n\nfunction cancelVideoCall() {\n  for (let track of localUserMedia.value?.getTracks()) {\n    track.stop();\n  }\n  //有可能连接还没建立，所以这里用可选链操作符\n  peerStore.dataConnection?.send({\n    instruction: peerStore.instruction.cancel\n  });\n  peerStore.dataConnection = undefined;\n  router.back();\n}\n\nfunction ringOffVideoCall() {\n  for (let track of localUserMedia.value?.getTracks()) {\n    track.stop();\n  }\n  //挂断的时候这个连接肯定不为空，所以无需判断\n  peerStore.dataConnection.send({\n    instruction: peerStore.instruction.ringOff\n  });\n\n  peerStore.dataConnection = undefined;\n  peerStore.mediaConnection = undefined;\n  router.back();\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  height: 100vh;\n  //background-color: black;\n  position: relative;\n\n  .secondary-video {\n    position: absolute;\n    z-index: 2;\n    border-radius: 0.625rem;\n    width: 30%;\n    top: 0.3125rem;\n    right: 0.3125rem;\n  }\n\n  .main-video {\n    position: absolute;\n    border-radius: 0.625rem;\n    width: 100%;\n    height: 100%;\n  }\n\n  .bottom-bar {\n    width: 100%;\n    position: absolute;\n    bottom: 0.625rem;\n  }\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}