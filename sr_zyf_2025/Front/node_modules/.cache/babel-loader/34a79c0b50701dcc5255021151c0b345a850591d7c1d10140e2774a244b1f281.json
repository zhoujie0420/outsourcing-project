{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-06afdcdc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = [\"poster\"];\nconst _hoisted_3 = [\"poster\"];\nconst _hoisted_4 = {\n  class: \"bottom-bar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_van_button = _resolveComponent(\"van-button\");\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"video\", {\n    class: \"main-video\",\n    ref: \"mainVideo\",\n    poster: $setup.poster,\n    autoplay: \"\"\n  }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"video\", {\n    class: \"secondary-video\",\n    ref: \"secondaryVideo\",\n    poster: $setup.poster,\n    autoplay: \"\"\n  }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"section\", _hoisted_4, [$setup.isConnected ? (_openBlock(), _createBlock(_component_van_button, {\n    key: 0,\n    type: \"danger\",\n    block: \"\",\n    onClick: $setup.ringOffVideoCall\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 挂断视频通话 \")]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","ref","poster","$setup","autoplay","_hoisted_4","isConnected","_createBlock","_component_van_button","type","block","onClick","ringOffVideoCall"],"sources":["/Users/jiezhou/IdeaProjects/graduaction/sr_RemoteDoctor_2025/Front/src/views/VideoCallAnswerView.vue"],"sourcesContent":["<template>\n  <section class=\"container\">\n    <video class=\"main-video\" ref=\"mainVideo\" :poster=\"poster\" autoplay></video>\n    <video class=\"secondary-video\" ref=\"secondaryVideo\" :poster=\"poster\" autoplay></video>\n    <section class=\"bottom-bar\">\n      <van-button v-if=\"isConnected\" type=\"danger\" block @click=\"ringOffVideoCall\">\n        挂断视频通话\n      </van-button>\n    </section>\n  </section>\n</template>\n\n<script setup>\nimport poster from \"@/assets/poster.gif\";\nimport usePeerStore from \"@/store/peer\";\nimport {onMounted, ref, watch} from \"vue\";\nimport {useRouter} from \"vue-router\";\nimport {showToast} from \"vant\";\n\nlet mainVideo = ref();\nlet secondaryVideo = ref();\n\nlet localUserMedia = ref();\n\nlet peerStore = usePeerStore();\n\nlet router = useRouter();\n\n//用于标记是否已经连接\nlet isConnected = ref(false);\n\nonMounted(() => {\n  getLocalUserMedia({audio: true, video: true}).then(userMedia => {\n    mainVideo.value.srcObject = userMedia;\n    localUserMedia.value = userMedia;\n    //先回应\n    peerStore.mediaConnection.answer(localUserMedia.value);\n    peerStore.mediaConnection.on(\"stream\", remoteUserMedia => {\n      mainVideo.value.srcObject = remoteUserMedia;\n      secondaryVideo.value.srcObject = localUserMedia.value;\n      isConnected.value = true;\n      showToast(\"connected\");\n    });\n  }).catch(() => {\n    showToast(\"failed to obtain local video media\");\n    router.back();\n  });\n});\n\n//监听对方挂断\nlet cancel = watch(() => [peerStore.dataConnection, peerStore.mediaConnection], ([dataConnection, mediaConnection]) => {\n  //两个连接都为空说明对方已经挂了\n  if (dataConnection === undefined && mediaConnection === undefined) {\n    cancel();\n    if (localUserMedia.value) {\n      for (let track of localUserMedia.value.getTracks()) {\n        track.stop();\n      }\n    }\n    showToast(\"the other party has hung up\");\n    router.back();\n  }\n}, {immediate: true});\n\n\nfunction getLocalUserMedia(constrains) {\n  if (window.navigator.mediaDevices.getUserMedia) {\n    return window.navigator.mediaDevices.getUserMedia(constrains);\n  } else if (window.navigator.webkitGetUserMedia) {\n    return window.navigator.webkitGetUserMedia(constrains);\n  } else if (window.navigator.mozGetUserMedia) {\n    return window.navigator.mozGetUserMedia(constrains);\n  } else if (window.navigator.getUserMedia) {\n    return window.navigator.getUserMedia(constrains);\n  }\n  throw new Error(\"unable to get user media\");\n}\n\n// 关闭视频通话\nfunction ringOffVideoCall() {\n  //先取消上面的监听\n  cancel();\n  for (let track of localUserMedia.value?.getTracks()) {\n    track.stop();\n  }\n  peerStore.dataConnection.send({\n    instruction: peerStore.instruction.ringOff\n  });\n  peerStore.dataConnection = undefined;\n  peerStore.mediaConnection = undefined;\n  router.back();\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  height: 100vh;\n  //background-color: black;\n  position: relative;\n\n  .secondary-video {\n    position: absolute;\n    z-index: 2;\n    border-radius: 0.625rem;\n    width: 30%;\n    top: 0.3125rem;\n    right: 0.3125rem;\n  }\n\n  .main-video {\n    position: absolute;\n    border-radius: 0.625rem;\n    width: 100%;\n    height: 100%;\n  }\n\n  .bottom-bar {\n    width: 100%;\n    position: absolute;\n    bottom: 0.625rem;\n  }\n}\n</style>"],"mappings":";;;EACWA,KAAK,EAAC;AAAW;;;;EAGfA,KAAK,EAAC;AAAY;;;uBAH7BC,mBAAA,CAQU,WARVC,UAQU,GAPRC,mBAAA,CAA4E;IAArEH,KAAK,EAAC,YAAY;IAACI,GAAG,EAAC,WAAW;IAAEC,MAAM,EAAEC,MAAA,CAAAD,MAAM;IAAEE,QAAQ,EAAR;uCAC3DJ,mBAAA,CAAsF;IAA/EH,KAAK,EAAC,iBAAiB;IAACI,GAAG,EAAC,gBAAgB;IAAEC,MAAM,EAAEC,MAAA,CAAAD,MAAM;IAAEE,QAAQ,EAAR;uCACrEJ,mBAAA,CAIU,WAJVK,UAIU,GAHUF,MAAA,CAAAG,WAAW,I,cAA7BC,YAAA,CAEaC,qBAAA;;IAFkBC,IAAI,EAAC,QAAQ;IAACC,KAAK,EAAL,EAAK;IAAEC,OAAK,EAAER,MAAA,CAAAS;;sBAAkB,MAE7E,C,iBAF6E,UAE7E,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}