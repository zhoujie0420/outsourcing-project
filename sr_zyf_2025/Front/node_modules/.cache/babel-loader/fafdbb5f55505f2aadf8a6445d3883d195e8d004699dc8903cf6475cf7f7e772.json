{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-579e318a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = [\"poster\"];\nconst _hoisted_3 = [\"poster\"];\nconst _hoisted_4 = {\n  class: \"bottom-bar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_van_button = _resolveComponent(\"van-button\");\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"video\", {\n    class: \"main-video\",\n    ref: \"mainVideo\",\n    poster: $setup.poster,\n    autoplay: \"\"\n  }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"video\", {\n    class: \"secondary-video\",\n    ref: \"secondaryVideo\",\n    poster: $setup.poster,\n    autoplay: \"\"\n  }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"section\", _hoisted_4, [$setup.isConnected ? (_openBlock(), _createBlock(_component_van_button, {\n    key: 0,\n    type: \"danger\",\n    block: \"\",\n    onClick: $setup.ringOffVideoCall\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 挂断视频通话 \")]),\n    _: 1 /* STABLE */\n  })) : (_openBlock(), _createBlock(_component_van_button, {\n    key: 1,\n    type: \"danger\",\n    block: \"\",\n    onClick: $setup.cancelVideoCall\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 取消视频通话 \")]),\n    _: 1 /* STABLE */\n  }))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","ref","poster","$setup","autoplay","_hoisted_4","isConnected","_createBlock","_component_van_button","type","block","onClick","ringOffVideoCall","cancelVideoCall"],"sources":["/Users/jiezhou/IdeaProjects/graduaction/sr_RemoteDoctor_2025/Front/src/views/VideoCallCallingView.vue"],"sourcesContent":["<template>\n  <section class=\"container\">\n    <video class=\"main-video\" ref=\"mainVideo\" :poster=\"poster\" autoplay></video>\n    <video class=\"secondary-video\" ref=\"secondaryVideo\" :poster=\"poster\" autoplay></video>\n    <section class=\"bottom-bar\">\n      <van-button v-if=\"isConnected\" type=\"danger\" block @click=\"ringOffVideoCall\">\n        挂断视频通话\n      </van-button>\n      <van-button v-else type=\"danger\" block @click=\"cancelVideoCall\">\n        取消视频通话\n      </van-button>\n    </section>\n  </section>\n</template>\n\n<script setup>\nimport poster from \"@/assets/poster.gif\";\nimport usePeerStore from \"@/store/peer\";\nimport {onMounted, ref} from \"vue\";\nimport {useRoute, useRouter} from \"vue-router\";\nimport {showToast} from \"vant\";\n\nlet mainVideo = ref();\nlet secondaryVideo = ref();\nlet localUserMedia = ref();\nlet peerStore = usePeerStore();\nlet router = useRouter();\nlet route = useRoute();\n\n//用于标记是否已经连接\nlet isConnected = ref(false);\nonMounted(() => {\n  getLocalUserMedia({audio: true, video: true}).then(userMedia => {\n    mainVideo.value.srcObject = userMedia;\n    mainVideo.value.muted = true;\n    localUserMedia.value = userMedia;\n    peerStore.dataConnection = peerStore.localPeer.connect(route.query.calleePeerId);\n    //对对方发过来的数据进行判断\n    peerStore.dataConnection.on(\"data\", data => {\n      if (data.instruction === peerStore.instruction.accept) {//接受\n        peerStore.mediaConnection = peerStore.localPeer.call(route.query.calleePeerId, localUserMedia.value);\n        peerStore.mediaConnection.on(\"stream\", userMedia => {\n          mainVideo.value.srcObject = userMedia;\n          mainVideo.value.muted = false;\n          //视图互换一下，把对方放在主视图上\n          secondaryVideo.value.srcObject = localUserMedia.value;\n          secondaryVideo.value.muted = true;\n          isConnected.value = true;\n          showToast(\"connected\");\n        });\n      } else if (data.instruction === peerStore.instruction.busy) {//忙线\n        //由于是对方通知关闭连接，所以此处调用close\n        peerStore.dataConnection.close();\n        peerStore.dataConnection = undefined;\n        for (let track of localUserMedia.value?.getTracks()) {\n          track.stop();\n        }\n        showToast(\"the other party is busy on the line\");\n        router.back();\n      } else if (data.instruction === peerStore.instruction.reject) {//拒绝\n        //由于是对方通知关闭连接，所以此处调用close\n        peerStore.dataConnection.close();\n        peerStore.dataConnection = undefined;\n        for (let track of localUserMedia.value?.getTracks()) {\n          track.stop();\n        }\n        showToast(\"the other party refused\");\n        router.back();\n      } else if (data.instruction === peerStore.instruction.ringOff) {//挂断\n        //由于是对方通知关闭连接，所以此处调用close\n        peerStore.dataConnection.close();\n        peerStore.dataConnection = undefined;\n        peerStore.mediaConnection.close();\n        peerStore.mediaConnection = undefined;\n        for (let track of localUserMedia.value?.getTracks()) {\n          track.stop();\n        }\n        showToast(\"the other party has hung up\");\n        router.back();\n      }\n    });\n    //当连接被打开的时候理解发送一个指令给对方\n    peerStore.dataConnection.on(\"open\", () => {\n      peerStore.dataConnection.send({\n        instruction: peerStore.instruction.request\n      });\n    });\n  }).catch(() => {\n    showToast(\"failed to obtain local video media\");\n    router.back();\n  });\n});\n\n\nfunction getLocalUserMedia(constrains) {\n  if (window.navigator.mediaDevices.getUserMedia) {\n    return window.navigator.mediaDevices.getUserMedia(constrains);\n  } else if (window.navigator.webkitGetUserMedia) {\n    return window.navigator.webkitGetUserMedia(constrains);\n  } else if (window.navigator.mozGetUserMedia) {\n    return window.navigator.mozGetUserMedia(constrains);\n  } else if (window.navigator.getUserMedia) {\n    return window.navigator.getUserMedia(constrains);\n  }\n  throw new Error(\"unable to get user media\");\n}\n\n\nfunction cancelVideoCall() {\n  for (let track of localUserMedia.value?.getTracks()) {\n    track.stop();\n  }\n  //有可能连接还没建立，所以这里用可选链操作符\n  peerStore.dataConnection?.send({\n    instruction: peerStore.instruction.cancel\n  });\n  peerStore.dataConnection = undefined;\n  router.back();\n}\n\nfunction ringOffVideoCall() {\n  for (let track of localUserMedia.value?.getTracks()) {\n    track.stop();\n  }\n  //挂断的时候这个连接肯定不为空，所以无需判断\n  peerStore.dataConnection.send({\n    instruction: peerStore.instruction.ringOff\n  });\n\n  peerStore.dataConnection = undefined;\n  peerStore.mediaConnection = undefined;\n  router.back();\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  height: 100vh;\n  //background-color: black;\n  position: relative;\n\n  .secondary-video {\n    position: absolute;\n    z-index: 2;\n    border-radius: 0.625rem;\n    width: 30%;\n    top: 0.3125rem;\n    right: 0.3125rem;\n  }\n\n  .main-video {\n    position: absolute;\n    border-radius: 0.625rem;\n    width: 100%;\n    height: 100%;\n  }\n\n  .bottom-bar {\n    width: 100%;\n    position: absolute;\n    bottom: 0.625rem;\n  }\n}\n</style>"],"mappings":";;;EACWA,KAAK,EAAC;AAAW;;;;EAGfA,KAAK,EAAC;AAAY;;;uBAH7BC,mBAAA,CAWU,WAXVC,UAWU,GAVRC,mBAAA,CAA4E;IAArEH,KAAK,EAAC,YAAY;IAACI,GAAG,EAAC,WAAW;IAAEC,MAAM,EAAEC,MAAA,CAAAD,MAAM;IAAEE,QAAQ,EAAR;uCAC3DJ,mBAAA,CAAsF;IAA/EH,KAAK,EAAC,iBAAiB;IAACI,GAAG,EAAC,gBAAgB;IAAEC,MAAM,EAAEC,MAAA,CAAAD,MAAM;IAAEE,QAAQ,EAAR;uCACrEJ,mBAAA,CAOU,WAPVK,UAOU,GANUF,MAAA,CAAAG,WAAW,I,cAA7BC,YAAA,CAEaC,qBAAA;;IAFkBC,IAAI,EAAC,QAAQ;IAACC,KAAK,EAAL,EAAK;IAAEC,OAAK,EAAER,MAAA,CAAAS;;sBAAkB,MAE7E,C,iBAF6E,UAE7E,E;;uBACAL,YAAA,CAEaC,qBAAA;;IAFMC,IAAI,EAAC,QAAQ;IAACC,KAAK,EAAL,EAAK;IAAEC,OAAK,EAAER,MAAA,CAAAU;;sBAAiB,MAEhE,C,iBAFgE,UAEhE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}