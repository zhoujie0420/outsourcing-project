{"ast":null,"code":"'use strict';\n\nvar base64 = require('./base64');\nvar utf8 = require('./utf8');\nvar utils = require('./utils');\nvar ZipEntries = require('./zipEntries');\nmodule.exports = function (data, options) {\n  var files, zipEntries, i, input;\n  options = utils.extend(options || {}, {\n    base64: false,\n    checkCRC32: false,\n    optimizedBinaryString: false,\n    createFolders: false,\n    decodeFileName: utf8.utf8decode\n  });\n  if (options.base64) {\n    data = base64.decode(data);\n  }\n  zipEntries = new ZipEntries(data, options);\n  files = zipEntries.files;\n  for (i = 0; i < files.length; i++) {\n    input = files[i];\n    this.file(input.fileNameStr, input.decompressed, {\n      binary: true,\n      optimizedBinaryString: true,\n      date: input.date,\n      dir: input.dir,\n      comment: input.fileCommentStr.length ? input.fileCommentStr : null,\n      unixPermissions: input.unixPermissions,\n      dosPermissions: input.dosPermissions,\n      createFolders: options.createFolders\n    });\n  }\n  if (zipEntries.zipComment.length) {\n    this.comment = zipEntries.zipComment;\n  }\n  return this;\n};","map":{"version":3,"names":["base64","require","utf8","utils","ZipEntries","module","exports","data","options","files","zipEntries","i","input","extend","checkCRC32","optimizedBinaryString","createFolders","decodeFileName","utf8decode","decode","length","file","fileNameStr","decompressed","binary","date","dir","comment","fileCommentStr","unixPermissions","dosPermissions","zipComment"],"sources":["/Users/jiezhou/IdeaProjects/graduaction/zj/Front/node_modules/jszip/lib/load.js"],"sourcesContent":["'use strict';\nvar base64 = require('./base64');\nvar utf8 = require('./utf8');\nvar utils = require('./utils');\nvar ZipEntries = require('./zipEntries');\nmodule.exports = function(data, options) {\n    var files, zipEntries, i, input;\n    options = utils.extend(options || {}, {\n        base64: false,\n        checkCRC32: false,\n        optimizedBinaryString : false,\n        createFolders: false,\n        decodeFileName: utf8.utf8decode\n    });\n    if (options.base64) {\n        data = base64.decode(data);\n    }\n\n    zipEntries = new ZipEntries(data, options);\n    files = zipEntries.files;\n    for (i = 0; i < files.length; i++) {\n        input = files[i];\n        this.file(input.fileNameStr, input.decompressed, {\n            binary: true,\n            optimizedBinaryString: true,\n            date: input.date,\n            dir: input.dir,\n            comment : input.fileCommentStr.length ? input.fileCommentStr : null,\n            unixPermissions : input.unixPermissions,\n            dosPermissions : input.dosPermissions,\n            createFolders: options.createFolders\n        });\n    }\n    if (zipEntries.zipComment.length) {\n        this.comment = zipEntries.zipComment;\n    }\n\n    return this;\n};\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC5B,IAAIE,KAAK,GAAGF,OAAO,CAAC,SAAS,CAAC;AAC9B,IAAIG,UAAU,GAAGH,OAAO,CAAC,cAAc,CAAC;AACxCI,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAEC,OAAO,EAAE;EACrC,IAAIC,KAAK,EAAEC,UAAU,EAAEC,CAAC,EAAEC,KAAK;EAC/BJ,OAAO,GAAGL,KAAK,CAACU,MAAM,CAACL,OAAO,IAAI,CAAC,CAAC,EAAE;IAClCR,MAAM,EAAE,KAAK;IACbc,UAAU,EAAE,KAAK;IACjBC,qBAAqB,EAAG,KAAK;IAC7BC,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAEf,IAAI,CAACgB;EACzB,CAAC,CAAC;EACF,IAAIV,OAAO,CAACR,MAAM,EAAE;IAChBO,IAAI,GAAGP,MAAM,CAACmB,MAAM,CAACZ,IAAI,CAAC;EAC9B;EAEAG,UAAU,GAAG,IAAIN,UAAU,CAACG,IAAI,EAAEC,OAAO,CAAC;EAC1CC,KAAK,GAAGC,UAAU,CAACD,KAAK;EACxB,KAAKE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACW,MAAM,EAAET,CAAC,EAAE,EAAE;IAC/BC,KAAK,GAAGH,KAAK,CAACE,CAAC,CAAC;IAChB,IAAI,CAACU,IAAI,CAACT,KAAK,CAACU,WAAW,EAAEV,KAAK,CAACW,YAAY,EAAE;MAC7CC,MAAM,EAAE,IAAI;MACZT,qBAAqB,EAAE,IAAI;MAC3BU,IAAI,EAAEb,KAAK,CAACa,IAAI;MAChBC,GAAG,EAAEd,KAAK,CAACc,GAAG;MACdC,OAAO,EAAGf,KAAK,CAACgB,cAAc,CAACR,MAAM,GAAGR,KAAK,CAACgB,cAAc,GAAG,IAAI;MACnEC,eAAe,EAAGjB,KAAK,CAACiB,eAAe;MACvCC,cAAc,EAAGlB,KAAK,CAACkB,cAAc;MACrCd,aAAa,EAAER,OAAO,CAACQ;IAC3B,CAAC,CAAC;EACN;EACA,IAAIN,UAAU,CAACqB,UAAU,CAACX,MAAM,EAAE;IAC9B,IAAI,CAACO,OAAO,GAAGjB,UAAU,CAACqB,UAAU;EACxC;EAEA,OAAO,IAAI;AACf,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}