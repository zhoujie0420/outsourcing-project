{"ast":null,"code":"'use strict';\n\nvar DataReader = require('./dataReader');\nvar utils = require('./utils');\nfunction StringReader(data, optimizedBinaryString) {\n  this.data = data;\n  if (!optimizedBinaryString) {\n    this.data = utils.string2binary(this.data);\n  }\n  this.length = this.data.length;\n  this.index = 0;\n  this.zero = 0;\n}\nStringReader.prototype = new DataReader();\n/**\n * @see DataReader.byteAt\n */\nStringReader.prototype.byteAt = function (i) {\n  return this.data.charCodeAt(this.zero + i);\n};\n/**\n * @see DataReader.lastIndexOfSignature\n */\nStringReader.prototype.lastIndexOfSignature = function (sig) {\n  return this.data.lastIndexOf(sig) - this.zero;\n};\n/**\n * @see DataReader.readData\n */\nStringReader.prototype.readData = function (size) {\n  this.checkOffset(size);\n  // this will work because the constructor applied the \"& 0xff\" mask.\n  var result = this.data.slice(this.zero + this.index, this.zero + this.index + size);\n  this.index += size;\n  return result;\n};\nmodule.exports = StringReader;","map":{"version":3,"names":["DataReader","require","utils","StringReader","data","optimizedBinaryString","string2binary","length","index","zero","prototype","byteAt","i","charCodeAt","lastIndexOfSignature","sig","lastIndexOf","readData","size","checkOffset","result","slice","module","exports"],"sources":["/Users/jiezhou/IdeaProjects/graduaction/zj/Front/node_modules/jszip/lib/stringReader.js"],"sourcesContent":["'use strict';\nvar DataReader = require('./dataReader');\nvar utils = require('./utils');\n\nfunction StringReader(data, optimizedBinaryString) {\n    this.data = data;\n    if (!optimizedBinaryString) {\n        this.data = utils.string2binary(this.data);\n    }\n    this.length = this.data.length;\n    this.index = 0;\n    this.zero = 0;\n}\nStringReader.prototype = new DataReader();\n/**\n * @see DataReader.byteAt\n */\nStringReader.prototype.byteAt = function(i) {\n    return this.data.charCodeAt(this.zero + i);\n};\n/**\n * @see DataReader.lastIndexOfSignature\n */\nStringReader.prototype.lastIndexOfSignature = function(sig) {\n    return this.data.lastIndexOf(sig) - this.zero;\n};\n/**\n * @see DataReader.readData\n */\nStringReader.prototype.readData = function(size) {\n    this.checkOffset(size);\n    // this will work because the constructor applied the \"& 0xff\" mask.\n    var result = this.data.slice(this.zero + this.index, this.zero + this.index + size);\n    this.index += size;\n    return result;\n};\nmodule.exports = StringReader;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,cAAc,CAAC;AACxC,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAS,CAAC;AAE9B,SAASE,YAAYA,CAACC,IAAI,EAAEC,qBAAqB,EAAE;EAC/C,IAAI,CAACD,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACC,qBAAqB,EAAE;IACxB,IAAI,CAACD,IAAI,GAAGF,KAAK,CAACI,aAAa,CAAC,IAAI,CAACF,IAAI,CAAC;EAC9C;EACA,IAAI,CAACG,MAAM,GAAG,IAAI,CAACH,IAAI,CAACG,MAAM;EAC9B,IAAI,CAACC,KAAK,GAAG,CAAC;EACd,IAAI,CAACC,IAAI,GAAG,CAAC;AACjB;AACAN,YAAY,CAACO,SAAS,GAAG,IAAIV,UAAU,CAAC,CAAC;AACzC;AACA;AACA;AACAG,YAAY,CAACO,SAAS,CAACC,MAAM,GAAG,UAASC,CAAC,EAAE;EACxC,OAAO,IAAI,CAACR,IAAI,CAACS,UAAU,CAAC,IAAI,CAACJ,IAAI,GAAGG,CAAC,CAAC;AAC9C,CAAC;AACD;AACA;AACA;AACAT,YAAY,CAACO,SAAS,CAACI,oBAAoB,GAAG,UAASC,GAAG,EAAE;EACxD,OAAO,IAAI,CAACX,IAAI,CAACY,WAAW,CAACD,GAAG,CAAC,GAAG,IAAI,CAACN,IAAI;AACjD,CAAC;AACD;AACA;AACA;AACAN,YAAY,CAACO,SAAS,CAACO,QAAQ,GAAG,UAASC,IAAI,EAAE;EAC7C,IAAI,CAACC,WAAW,CAACD,IAAI,CAAC;EACtB;EACA,IAAIE,MAAM,GAAG,IAAI,CAAChB,IAAI,CAACiB,KAAK,CAAC,IAAI,CAACZ,IAAI,GAAG,IAAI,CAACD,KAAK,EAAE,IAAI,CAACC,IAAI,GAAG,IAAI,CAACD,KAAK,GAAGU,IAAI,CAAC;EACnF,IAAI,CAACV,KAAK,IAAIU,IAAI;EAClB,OAAOE,MAAM;AACjB,CAAC;AACDE,MAAM,CAACC,OAAO,GAAGpB,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}