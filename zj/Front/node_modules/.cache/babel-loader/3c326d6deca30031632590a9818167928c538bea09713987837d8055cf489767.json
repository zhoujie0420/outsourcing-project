{"ast":null,"code":"var mhtDocumentTemplate, mhtPartTemplate;\nmhtDocumentTemplate = require('./templates/mht_document');\nmhtPartTemplate = require('./templates/mht_part');\nmodule.exports = {\n  getMHTdocument: function (htmlSource) {\n    var imageContentParts, ref;\n    ref = this._prepareImageParts(htmlSource), htmlSource = ref.htmlSource, imageContentParts = ref.imageContentParts;\n    htmlSource = htmlSource.replace(/\\=/g, '=3D');\n    return mhtDocumentTemplate({\n      htmlSource: htmlSource,\n      contentParts: imageContentParts.join('\\n')\n    });\n  },\n  _prepareImageParts: function (htmlSource) {\n    var imageContentParts, inlinedReplacer, inlinedSrcPattern;\n    imageContentParts = [];\n    inlinedSrcPattern = /\"data:(\\w+\\/\\w+);(\\w+),(\\S+)\"/g;\n    inlinedReplacer = function (match, contentType, contentEncoding, encodedContent) {\n      var contentLocation, extension, index;\n      index = imageContentParts.length;\n      extension = contentType.split('/')[1];\n      contentLocation = \"file:///C:/fake/image\" + index + \".\" + extension;\n      imageContentParts.push(mhtPartTemplate({\n        contentType: contentType,\n        contentEncoding: contentEncoding,\n        contentLocation: contentLocation,\n        encodedContent: encodedContent\n      }));\n      return \"\\\"\" + contentLocation + \"\\\"\";\n    };\n    if (typeof htmlSource === 'string') {\n      if (!/<img/g.test(htmlSource)) {\n        return {\n          htmlSource: htmlSource,\n          imageContentParts: imageContentParts\n        };\n      }\n      htmlSource = htmlSource.replace(inlinedSrcPattern, inlinedReplacer);\n      return {\n        htmlSource: htmlSource,\n        imageContentParts: imageContentParts\n      };\n    } else {\n      throw new Error(\"Not a valid source provided!\");\n    }\n  }\n};","map":{"version":3,"names":["mhtDocumentTemplate","mhtPartTemplate","require","module","exports","getMHTdocument","htmlSource","imageContentParts","ref","_prepareImageParts","replace","contentParts","join","inlinedReplacer","inlinedSrcPattern","match","contentType","contentEncoding","encodedContent","contentLocation","extension","index","length","split","push","test","Error"],"sources":["/Users/jiezhou/IdeaProjects/graduaction/zj/Front/node_modules/html-docx-js/build/utils.js"],"sourcesContent":["var mhtDocumentTemplate, mhtPartTemplate;\n\nmhtDocumentTemplate = require('./templates/mht_document');\n\nmhtPartTemplate = require('./templates/mht_part');\n\nmodule.exports = {\n  getMHTdocument: function(htmlSource) {\n    var imageContentParts, ref;\n    ref = this._prepareImageParts(htmlSource), htmlSource = ref.htmlSource, imageContentParts = ref.imageContentParts;\n    htmlSource = htmlSource.replace(/\\=/g, '=3D');\n    return mhtDocumentTemplate({\n      htmlSource: htmlSource,\n      contentParts: imageContentParts.join('\\n')\n    });\n  },\n  _prepareImageParts: function(htmlSource) {\n    var imageContentParts, inlinedReplacer, inlinedSrcPattern;\n    imageContentParts = [];\n    inlinedSrcPattern = /\"data:(\\w+\\/\\w+);(\\w+),(\\S+)\"/g;\n    inlinedReplacer = function(match, contentType, contentEncoding, encodedContent) {\n      var contentLocation, extension, index;\n      index = imageContentParts.length;\n      extension = contentType.split('/')[1];\n      contentLocation = \"file:///C:/fake/image\" + index + \".\" + extension;\n      imageContentParts.push(mhtPartTemplate({\n        contentType: contentType,\n        contentEncoding: contentEncoding,\n        contentLocation: contentLocation,\n        encodedContent: encodedContent\n      }));\n      return \"\\\"\" + contentLocation + \"\\\"\";\n    };\n    if (typeof htmlSource === 'string') {\n      if (!/<img/g.test(htmlSource)) {\n        return {\n          htmlSource: htmlSource,\n          imageContentParts: imageContentParts\n        };\n      }\n      htmlSource = htmlSource.replace(inlinedSrcPattern, inlinedReplacer);\n      return {\n        htmlSource: htmlSource,\n        imageContentParts: imageContentParts\n      };\n    } else {\n      throw new Error(\"Not a valid source provided!\");\n    }\n  }\n};\n"],"mappings":"AAAA,IAAIA,mBAAmB,EAAEC,eAAe;AAExCD,mBAAmB,GAAGE,OAAO,CAAC,0BAA0B,CAAC;AAEzDD,eAAe,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAEjDC,MAAM,CAACC,OAAO,GAAG;EACfC,cAAc,EAAE,SAAAA,CAASC,UAAU,EAAE;IACnC,IAAIC,iBAAiB,EAAEC,GAAG;IAC1BA,GAAG,GAAG,IAAI,CAACC,kBAAkB,CAACH,UAAU,CAAC,EAAEA,UAAU,GAAGE,GAAG,CAACF,UAAU,EAAEC,iBAAiB,GAAGC,GAAG,CAACD,iBAAiB;IACjHD,UAAU,GAAGA,UAAU,CAACI,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;IAC7C,OAAOV,mBAAmB,CAAC;MACzBM,UAAU,EAAEA,UAAU;MACtBK,YAAY,EAAEJ,iBAAiB,CAACK,IAAI,CAAC,IAAI;IAC3C,CAAC,CAAC;EACJ,CAAC;EACDH,kBAAkB,EAAE,SAAAA,CAASH,UAAU,EAAE;IACvC,IAAIC,iBAAiB,EAAEM,eAAe,EAAEC,iBAAiB;IACzDP,iBAAiB,GAAG,EAAE;IACtBO,iBAAiB,GAAG,gCAAgC;IACpDD,eAAe,GAAG,SAAAA,CAASE,KAAK,EAAEC,WAAW,EAAEC,eAAe,EAAEC,cAAc,EAAE;MAC9E,IAAIC,eAAe,EAAEC,SAAS,EAAEC,KAAK;MACrCA,KAAK,GAAGd,iBAAiB,CAACe,MAAM;MAChCF,SAAS,GAAGJ,WAAW,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACrCJ,eAAe,GAAG,uBAAuB,GAAGE,KAAK,GAAG,GAAG,GAAGD,SAAS;MACnEb,iBAAiB,CAACiB,IAAI,CAACvB,eAAe,CAAC;QACrCe,WAAW,EAAEA,WAAW;QACxBC,eAAe,EAAEA,eAAe;QAChCE,eAAe,EAAEA,eAAe;QAChCD,cAAc,EAAEA;MAClB,CAAC,CAAC,CAAC;MACH,OAAO,IAAI,GAAGC,eAAe,GAAG,IAAI;IACtC,CAAC;IACD,IAAI,OAAOb,UAAU,KAAK,QAAQ,EAAE;MAClC,IAAI,CAAC,OAAO,CAACmB,IAAI,CAACnB,UAAU,CAAC,EAAE;QAC7B,OAAO;UACLA,UAAU,EAAEA,UAAU;UACtBC,iBAAiB,EAAEA;QACrB,CAAC;MACH;MACAD,UAAU,GAAGA,UAAU,CAACI,OAAO,CAACI,iBAAiB,EAAED,eAAe,CAAC;MACnE,OAAO;QACLP,UAAU,EAAEA,UAAU;QACtBC,iBAAiB,EAAEA;MACrB,CAAC;IACH,CAAC,MAAM;MACL,MAAM,IAAImB,KAAK,CAAC,8BAA8B,CAAC;IACjD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}