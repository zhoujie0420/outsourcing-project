{"ast":null,"code":"'use strict';\n\nvar utils = require('./utils');\n\n/**\n * An object to write any content to an Uint8Array.\n * @constructor\n * @param {number} length The length of the array.\n */\nvar Uint8ArrayWriter = function (length) {\n  this.data = new Uint8Array(length);\n  this.index = 0;\n};\nUint8ArrayWriter.prototype = {\n  /**\n   * Append any content to the current array.\n   * @param {Object} input the content to add.\n   */\n  append: function (input) {\n    if (input.length !== 0) {\n      // with an empty Uint8Array, Opera fails with a \"Offset larger than array size\"\n      input = utils.transformTo(\"uint8array\", input);\n      this.data.set(input, this.index);\n      this.index += input.length;\n    }\n  },\n  /**\n   * Finalize the construction an return the result.\n   * @return {Uint8Array} the generated array.\n   */\n  finalize: function () {\n    return this.data;\n  }\n};\nmodule.exports = Uint8ArrayWriter;","map":{"version":3,"names":["utils","require","Uint8ArrayWriter","length","data","Uint8Array","index","prototype","append","input","transformTo","set","finalize","module","exports"],"sources":["/Users/jiezhou/IdeaProjects/graduaction/zj/Front/node_modules/jszip/lib/uint8ArrayWriter.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./utils');\n\n/**\n * An object to write any content to an Uint8Array.\n * @constructor\n * @param {number} length The length of the array.\n */\nvar Uint8ArrayWriter = function(length) {\n    this.data = new Uint8Array(length);\n    this.index = 0;\n};\nUint8ArrayWriter.prototype = {\n    /**\n     * Append any content to the current array.\n     * @param {Object} input the content to add.\n     */\n    append: function(input) {\n        if (input.length !== 0) {\n            // with an empty Uint8Array, Opera fails with a \"Offset larger than array size\"\n            input = utils.transformTo(\"uint8array\", input);\n            this.data.set(input, this.index);\n            this.index += input.length;\n        }\n    },\n    /**\n     * Finalize the construction an return the result.\n     * @return {Uint8Array} the generated array.\n     */\n    finalize: function() {\n        return this.data;\n    }\n};\n\nmodule.exports = Uint8ArrayWriter;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;;AAE9B;AACA;AACA;AACA;AACA;AACA,IAAIC,gBAAgB,GAAG,SAAAA,CAASC,MAAM,EAAE;EACpC,IAAI,CAACC,IAAI,GAAG,IAAIC,UAAU,CAACF,MAAM,CAAC;EAClC,IAAI,CAACG,KAAK,GAAG,CAAC;AAClB,CAAC;AACDJ,gBAAgB,CAACK,SAAS,GAAG;EACzB;AACJ;AACA;AACA;EACIC,MAAM,EAAE,SAAAA,CAASC,KAAK,EAAE;IACpB,IAAIA,KAAK,CAACN,MAAM,KAAK,CAAC,EAAE;MACpB;MACAM,KAAK,GAAGT,KAAK,CAACU,WAAW,CAAC,YAAY,EAAED,KAAK,CAAC;MAC9C,IAAI,CAACL,IAAI,CAACO,GAAG,CAACF,KAAK,EAAE,IAAI,CAACH,KAAK,CAAC;MAChC,IAAI,CAACA,KAAK,IAAIG,KAAK,CAACN,MAAM;IAC9B;EACJ,CAAC;EACD;AACJ;AACA;AACA;EACIS,QAAQ,EAAE,SAAAA,CAAA,EAAW;IACjB,OAAO,IAAI,CAACR,IAAI;EACpB;AACJ,CAAC;AAEDS,MAAM,CAACC,OAAO,GAAGZ,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}