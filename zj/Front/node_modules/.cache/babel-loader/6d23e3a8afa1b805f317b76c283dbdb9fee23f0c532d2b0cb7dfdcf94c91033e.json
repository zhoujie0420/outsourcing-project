{"ast":null,"code":"'use strict';\n\nvar utils = require('./utils');\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.string2binary = function (str) {\n  return utils.string2binary(str);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.string2Uint8Array = function (str) {\n  return utils.transformTo(\"uint8array\", str);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.uint8Array2String = function (array) {\n  return utils.transformTo(\"string\", array);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.string2Blob = function (str) {\n  var buffer = utils.transformTo(\"arraybuffer\", str);\n  return utils.arrayBuffer2Blob(buffer);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.arrayBuffer2Blob = function (buffer) {\n  return utils.arrayBuffer2Blob(buffer);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.transformTo = function (outputType, input) {\n  return utils.transformTo(outputType, input);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.getTypeOf = function (input) {\n  return utils.getTypeOf(input);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.checkSupport = function (type) {\n  return utils.checkSupport(type);\n};\n\n/**\n * @deprecated\n * This value will be removed in a future version without replacement.\n */\nexports.MAX_VALUE_16BITS = utils.MAX_VALUE_16BITS;\n\n/**\n * @deprecated\n * This value will be removed in a future version without replacement.\n */\nexports.MAX_VALUE_32BITS = utils.MAX_VALUE_32BITS;\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.pretty = function (str) {\n  return utils.pretty(str);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.findCompression = function (compressionMethod) {\n  return utils.findCompression(compressionMethod);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.isRegExp = function (object) {\n  return utils.isRegExp(object);\n};","map":{"version":3,"names":["utils","require","exports","string2binary","str","string2Uint8Array","transformTo","uint8Array2String","array","string2Blob","buffer","arrayBuffer2Blob","outputType","input","getTypeOf","checkSupport","type","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","compressionMethod","isRegExp","object"],"sources":["/Users/jiezhou/IdeaProjects/graduaction/zj/Front/node_modules/jszip/lib/deprecatedPublicUtils.js"],"sourcesContent":["'use strict';\nvar utils = require('./utils');\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.string2binary = function(str) {\n    return utils.string2binary(str);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.string2Uint8Array = function(str) {\n    return utils.transformTo(\"uint8array\", str);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.uint8Array2String = function(array) {\n    return utils.transformTo(\"string\", array);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.string2Blob = function(str) {\n    var buffer = utils.transformTo(\"arraybuffer\", str);\n    return utils.arrayBuffer2Blob(buffer);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.arrayBuffer2Blob = function(buffer) {\n    return utils.arrayBuffer2Blob(buffer);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.transformTo = function(outputType, input) {\n    return utils.transformTo(outputType, input);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.getTypeOf = function(input) {\n    return utils.getTypeOf(input);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.checkSupport = function(type) {\n    return utils.checkSupport(type);\n};\n\n/**\n * @deprecated\n * This value will be removed in a future version without replacement.\n */\nexports.MAX_VALUE_16BITS = utils.MAX_VALUE_16BITS;\n\n/**\n * @deprecated\n * This value will be removed in a future version without replacement.\n */\nexports.MAX_VALUE_32BITS = utils.MAX_VALUE_32BITS;\n\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.pretty = function(str) {\n    return utils.pretty(str);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.findCompression = function(compressionMethod) {\n    return utils.findCompression(compressionMethod);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.isRegExp = function (object) {\n    return utils.isRegExp(object);\n};\n\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;;AAE9B;AACA;AACA;AACA;AACAC,OAAO,CAACC,aAAa,GAAG,UAASC,GAAG,EAAE;EAClC,OAAOJ,KAAK,CAACG,aAAa,CAACC,GAAG,CAAC;AACnC,CAAC;;AAED;AACA;AACA;AACA;AACAF,OAAO,CAACG,iBAAiB,GAAG,UAASD,GAAG,EAAE;EACtC,OAAOJ,KAAK,CAACM,WAAW,CAAC,YAAY,EAAEF,GAAG,CAAC;AAC/C,CAAC;;AAED;AACA;AACA;AACA;AACAF,OAAO,CAACK,iBAAiB,GAAG,UAASC,KAAK,EAAE;EACxC,OAAOR,KAAK,CAACM,WAAW,CAAC,QAAQ,EAAEE,KAAK,CAAC;AAC7C,CAAC;;AAED;AACA;AACA;AACA;AACAN,OAAO,CAACO,WAAW,GAAG,UAASL,GAAG,EAAE;EAChC,IAAIM,MAAM,GAAGV,KAAK,CAACM,WAAW,CAAC,aAAa,EAAEF,GAAG,CAAC;EAClD,OAAOJ,KAAK,CAACW,gBAAgB,CAACD,MAAM,CAAC;AACzC,CAAC;;AAED;AACA;AACA;AACA;AACAR,OAAO,CAACS,gBAAgB,GAAG,UAASD,MAAM,EAAE;EACxC,OAAOV,KAAK,CAACW,gBAAgB,CAACD,MAAM,CAAC;AACzC,CAAC;;AAED;AACA;AACA;AACA;AACAR,OAAO,CAACI,WAAW,GAAG,UAASM,UAAU,EAAEC,KAAK,EAAE;EAC9C,OAAOb,KAAK,CAACM,WAAW,CAACM,UAAU,EAAEC,KAAK,CAAC;AAC/C,CAAC;;AAED;AACA;AACA;AACA;AACAX,OAAO,CAACY,SAAS,GAAG,UAASD,KAAK,EAAE;EAChC,OAAOb,KAAK,CAACc,SAAS,CAACD,KAAK,CAAC;AACjC,CAAC;;AAED;AACA;AACA;AACA;AACAX,OAAO,CAACa,YAAY,GAAG,UAASC,IAAI,EAAE;EAClC,OAAOhB,KAAK,CAACe,YAAY,CAACC,IAAI,CAAC;AACnC,CAAC;;AAED;AACA;AACA;AACA;AACAd,OAAO,CAACe,gBAAgB,GAAGjB,KAAK,CAACiB,gBAAgB;;AAEjD;AACA;AACA;AACA;AACAf,OAAO,CAACgB,gBAAgB,GAAGlB,KAAK,CAACkB,gBAAgB;;AAGjD;AACA;AACA;AACA;AACAhB,OAAO,CAACiB,MAAM,GAAG,UAASf,GAAG,EAAE;EAC3B,OAAOJ,KAAK,CAACmB,MAAM,CAACf,GAAG,CAAC;AAC5B,CAAC;;AAED;AACA;AACA;AACA;AACAF,OAAO,CAACkB,eAAe,GAAG,UAASC,iBAAiB,EAAE;EAClD,OAAOrB,KAAK,CAACoB,eAAe,CAACC,iBAAiB,CAAC;AACnD,CAAC;;AAED;AACA;AACA;AACA;AACAnB,OAAO,CAACoB,QAAQ,GAAG,UAAUC,MAAM,EAAE;EACjC,OAAOvB,KAAK,CAACsB,QAAQ,CAACC,MAAM,CAAC;AACjC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}